import jsonfrom faker import Fakerfrom random import randrangefaker = Faker()oos_event = [{        "upc": faker.ean(length=13),        "case_pack": faker.pyfloat(positive=True, min_value=1, max_value=10),        "case_uom": faker.pystr(),        "created_at": faker.iso8601(),        "pack_size": faker.pyint(),        "pack_number": faker.pystr()      } for _ in range(randrange(1, 10))]entity = {  "oos_id": faker.pyint(min_value=100000000, max_value=900000000000),  "stage": faker.pystr(),  "is_active": faker.pybool(),  "store_id": faker.pyint(min_value=1000, max_value=10000),  "department": faker.pystr(),  "aisle": faker.pystr(),  "location_key": faker.pystr(),  "start_time": faker.iso8601(),  "end_time": faker.iso8601(),  "max_end_time": faker.iso8601(),  "valid_at": faker.iso8601(),  "created_at": faker.iso8601(),  "updated_at": faker.iso8601(),  "date": faker.date(),  "oos_event": [    {      "stage": faker.pystr(),      "created_at": faker.iso8601()    },    {      "stage": faker.pystr(),      "created_at": faker.iso8601()    },    {      "stage": faker.pystr(),      "created_at": faker.iso8601()    }  ],  "bbox_id": faker.pyint(min_value=100000, max_value=999999999),  "state": faker.pystr(),  "reason": faker.pystr(min_chars=5, max_chars=10),  "source": faker.pystr(),  "product": {    "name": faker.pystr(),    "brand": faker.company(),    "image": faker.url(),    "price": faker.pyfloat(positive=True),    "upc": faker.ean(length=13),    "item_number": faker.pystr(),    "supplier": faker.pystr(),    "created_at": faker.date(),    "updated_at": faker.date(),    "inventory_level": faker.pyfloat(positive=True, min_value=1, max_value=100),    "product_dimensions": {      "height": faker.pyfloat(positive=True, min_value=1, max_value=50),      "depth": faker.pyfloat(positive=True, min_value=1, max_value=50),      "width": faker.pyfloat(positive=True, min_value=1, max_value=50)    },    "case_pack": [      {        "upc": faker.ean(length=13),        "case_pack": faker.pyfloat(positive=True, min_value=1, max_value=10),        "case_uom": faker.pystr(),        "created_at": faker.iso8601(),        "pack_size": faker.pyint(),        "pack_number": faker.pystr()      },      {        "upc": faker.ean(length=13),        "case_pack": faker.pyfloat(positive=True, min_value=1, max_value=10),        "case_uom": faker.pystr(),        "created_at": faker.iso8601(),        "pack_size": faker.pyint(),        "pack_number": faker.pystr()      },      {        "upc": faker.ean(length=13),        "case_pack": faker.pyfloat(positive=True, min_value=1, max_value=10),        "case_uom": faker.pystr(),        "created_at": faker.iso8601(),        "pack_size": faker.pyint(),        "pack_number": faker.pystr()      }    ]  }}entity2 = {  "oos_id": faker.pyint(min_value=100000000, max_value=9000000000),  "stage": faker.pystr(),  "is_active": faker.pybool(),  "store_id": faker.pyint(min_value=1000, max_value=10000),  "department": faker.pystr(),  "aisle": faker.pystr(),  "location_key": faker.pystr(),  "start_time": faker.iso8601(),  "oos_event": [    {      "stage": faker.pystr(),      "created_at": faker.iso8601()    }  ],  "bbox_id": faker.pyint(min_value=100000, max_value=99999999),  "state": faker.pystr(),  "reason": faker.pystr(min_chars=1, max_chars=5),  "source": faker.pystr(),  "product": {    "name": faker.pystr(),    "image": faker.url(),    "supplier": faker.pystr(),    "created_at": faker.date(),    "updated_at": faker.date(),    "inventory_level": faker.pyfloat(positive=True, min_value=1, max_value=20),    "product_dimensions": {      "height": faker.pyfloat(positive=True, min_value=1, max_value=20),      "depth": faker.pyfloat(positive=True, min_value=1, max_value=20),      "width": faker.pyfloat(positive=True, min_value=1, max_value=20)    },    "case_pack": [      {        "upc": faker.ean(length=13),        "case_pack": faker.pyfloat(positive=True, min_value=1, max_value=10),        "created_at": faker.iso8601(),        "pack_size": faker.pyint(),        "pack_number": faker.pystr()      }    ]  }}document = {  'first_name': faker.first_name(),  'last_name': faker.last_name(),  'address': faker.street_address(),  'city': faker.city(),  'total_assets': faker.pydecimal(min_value=100, max_value=1000, right_digits=2)}print()# print(type(json.dumps(entity, indent=4)))print(len(json.dumps(entity).encode("utf8")))print(len(json.dumps(entity2).encode("utf8")))